# Otus
## PostgreSQL Advanced
### PostgreSQL и Docker: создание образов, настройка и мониторинг 
#### Рукомойкин Андрей

1. Создайте инстанс с Ubuntu 20.04 в Яндекс.Облаке или аналогах.

* VM configurating:
CPU: 2
RAM: 2GB
hostname: otus02t
Login name: hamlet
Login details: ssh -l hamlet 130.193.43.82
ssh -i /var/lib/postgresql/.ssh/hw02t hamlet@130.193.43.82

hamlet@otus02t:~$ uname -a
Linux otus02t 6.8.0-84-generic #84-Ubuntu SMP PREEMPT_DYNAMIC Fri Sep  5 22:36:38 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux

hamlet@otus02t:~$ lsb_release -a
Distributor ID: Ubuntu
Description:    Ubuntu 24.04.3 LTS
Release:        24.04

2. Установите Docker Engine.

2.1

root@Work01:~# curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh && rm get-docker.sh && sudo usermod -aG docker $USER && newgrp docker
# Executing docker install script, commit: ae03142550f7efbcffc843c8f55e7d2bc9351a74
+ sh -c apt-get -qq update >/dev/null
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get -y -qq install ca-certificates curl >/dev/null
+ sh -c install -m 0755 -d /etc/apt/keyrings
+ sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" -o /etc/apt/keyrings/docker.asc
+ sh -c chmod a+r /etc/apt/keyrings/docker.asc
+ sh -c echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu jammy stable" > /etc/apt/sources.list.d/docker.list
+ sh -c apt-get -qq update >/dev/null
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get -y -qq install docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin docker-model-plugin >/dev/null
+ sh -c docker version
Client: Docker Engine - Community
 Version:           28.5.0
 API version:       1.51
 Go version:        go1.24.7
 Git commit:        887030f
 Built:             Thu Oct  2 14:54:27 2025
 OS/Arch:           linux/amd64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          28.5.0
  API version:      1.51 (minimum version 1.24)
  Go version:       go1.24.7
  Git commit:       cd04830
  Built:            Thu Oct  2 14:54:27 2025
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          v1.7.28
  GitCommit:        b98a3aace656320842a23f4a392a33f46af97866
 runc:
  Version:          1.3.0
  GitCommit:        v1.3.0-0-g4ca628d1
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0

================================================================================

To run Docker as a non-privileged user, consider setting up the
Docker daemon in rootless mode for your user:

    dockerd-rootless-setuptool.sh install

Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.


To run the Docker daemon as a fully privileged service, but granting non-root
users access, refer to https://docs.docker.com/go/daemon-access/

WARNING: Access to the remote API on a privileged Docker daemon is equivalent
         to root access on the host. Refer to the 'Docker daemon attack surface'
         documentation for details: https://docs.docker.com/go/attack-surface/

================================================================================

2.2 Создаем docker-сеть: 
root@otus02t:~# docker network create pg-net
14106098c4fb91bcdf7dfda147a532ad38d917564e4e67d8ef7c4e9bbec6d8be

2.3 Проверить существующие контейнеры

root@otus02t:~# docker context ls
NAME        DESCRIPTION                               DOCKER ENDPOINT               ERROR
default *   Current DOCKER_HOST based configuration   unix:///var/run/docker.sock
root@otus02t:~# docker images -a
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE

2.4 Проверка докера (аналог HELP)

root@otus02t:~# docker
Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  bake        Build from a file
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Authenticate to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

2.5 список контейреров

root@otus02t:~# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

3. Создайте каталог /var/lib/postgres для хранения данных.

root@otus02t:~# mkdir /var/lib/postgres
root@otus02t:~# ls -ld /var/lib/postgres
drwxr-xr-x 2 root docker 4096 Oct  5 11:53 /var/lib/postgres

4. Разверните контейнер с PostgreSQL 14, смонтировав в него /var/lib/postgres.

root@otus02t:~# sudo docker run --name pg-server2 --network pg-net -e POSTGRES_PASSWORD=postgres -d -p 5432:5432 -v /var/lib/postgres:/var/lib/postgresql/data postgres:14
4075897907c474f66fa7eb33c5cae9b44e2b5d5a9ec8b5f430df3bbc242351dd

4.1 зайти на докер 

root@otus02t:~# docker exec -it pg-server2 /bin/bash

root@otus02t:~# psql -h localhost -p 5432 -U postgres -d postgres
Password for user postgres:
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1), server 14.19 (Debian 14.19-1.pgdg13+1))
Type "help" for help.

postgres=# create database OTUS
postgres-# ;
CREATE DATABASE
postgres=# \l+
                                                                                        List of databases
   Name    |  Owner   | Encoding | Locale Provider |  Collate   |   Ctype    | ICU Locale | ICU Rules |   Access privileges   |  Size   | Tablespace |                Description
-----------+----------+----------+-----------------+------------+------------+------------+-----------+-----------------------+---------+------------+--------------------------------------------
 otus      | postgres | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           |                       | 8441 kB | pg_default |


5. Разверните контейнер с клиентом PostgreSQL.

5.1 развернуть второй контейнер в той же сети с любым постгресом, я выбрал 15

docker run --network pg-net -e POSTGRES_PASSWORD=postgres -d -p 5433:5433  postgres:15

root@otus02t:/var/lib/postgres# docker ps
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS          PORTS                                                   NAMES
9e8b4f946f76   postgres:15   "docker-entrypoint.s…"   6 seconds ago    Up 5 seconds    5432/tcp, 0.0.0.0:5433->5433/tcp, [::]:5433->5433/tcp   interesting_spence
4075897907c4   postgres:14   "docker-entrypoint.s…"   23 minutes ago   Up 23 minutes   0.0.0.0:5432->5432/tcp, [::]:5432->5432/tcp             pg-server2


5.2 подключиться к контейнеру с 15 postgres и проверить, что бд OTUS была создана

postgres@9e8b4f946f76:~$ psql -h pg-server2 -U postgres -d postgres
Password for user postgres:
psql (15.14 (Debian 15.14-1.pgdg13+1), server 14.19 (Debian 14.19-1.pgdg13+1))
Type "help" for help.

postgres=# \l+
                                                                                  List of databases
   Name    |  Owner   | Encoding |  Collate   |   Ctype    | ICU Locale | Locale Provider |   Access privileges   |  Size   | Tablespace |                Description
-----------+----------+----------+------------+------------+------------+-----------------+-----------------------+---------+------------+--------------------------------------------
 otus      | postgres | UTF8     | en_US.utf8 | en_US.utf8 |            | libc            |                       | 8441 kB | pg_default |
 postgres  | postgres | UTF8     | en_US.utf8 | en_US.utf8 |            | libc            |                       | 8593 kB | pg_default | default administrative connection database
 template0 | postgres | UTF8     | en_US.utf8 | en_US.utf8 |            | libc            | =c/postgres          +| 8441 kB | pg_default | unmodifiable empty database
           |          |          |            |            |            |                 | postgres=CTc/postgres |         |            |
 template1 | postgres | UTF8     | en_US.utf8 | en_US.utf8 |            | libc            | =c/postgres          +| 8441 kB | pg_default | default template for new databases
           |          |          |            |            |            |                 | postgres=CTc/postgres |         |            |
(4 rows)

6. Подключитесь из контейнера с клиентом к контейнеру с сервером и создайте таблицу с данными о перевозках.

otus=# \conninfo
You are connected to database "otus" as user "postgres" on host "pg-server2" (address "172.18.0.2") at port "5432".
otus=# select count(*) from shipments;
 count
-------
    10
(1 row)

7. Подключитесь к контейнеру с сервером с ноутбука или компьютера.


root@Work01:~# psql -p 5432 -U postgres -h 130.193.43.82 -d otus -W
Password:
psql (14.19 (Ubuntu 14.19-0ubuntu0.22.04.1))
Type "help" for help.

otus=# select * from shipments;
 id | product_name | quantity | destination
----+--------------+----------+-------------
  1 | bananas      |     1000 | Europe
  2 | bananas      |     1500 | Asia
  3 | bananas      |     2000 | Africa
  4 | coffee       |      500 | USA
  5 | coffee       |      700 | Canada
  6 | coffee       |      300 | Japan
  7 | sugar        |     1000 | Europe
  8 | sugar        |      800 | Asia
  9 | sugar        |      600 | Africa
 10 | sugar        |      400 | USA
(10 rows)

8. Удалите контейнер с сервером и создайте его заново.

8.1 сначала останавливаем контейнер 

root@otus02t:~# docker stop pg-server2

8.2 проверяем статус 

root@otus02t:~# docker ps -a
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS                          PORTS                                                   NAMES
9e8b4f946f76   postgres:15   "docker-entrypoint.s…"   15 minutes ago   Up 15 minutes                   5432/tcp, 0.0.0.0:5433->5433/tcp, [::]:5433->5433/tcp   interesting_spence
4075897907c4   postgres:14   "docker-entrypoint.s…"   38 minutes ago   Exited (0) About a minute ago                                                           pg-server2

8.3 удаляем контейнер

root@otus02t:~# docker rm pg-server2
pg-server2
root@otus02t:~# docker ps -a
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS                      PORTS                                                   NAMES
9e8b4f946f76   postgres:15   "docker-entrypoint.s…"   18 minutes ago   Up 18 minutes               5432/tcp, 0.0.0.0:5433->5433/tcp, [::]:5433->5433/tcp   interesting_spence

8.4 Пересоздаем контейнер

root@otus02t:~# docker run --name pg-server2 --network pg-net -e POSTGRES_PASSWORD=postgres -d -p 5432:5432 -v /var/lib/postgres:/var/lib/postgresql/data postgres:14
3c489cbfc54f799660af6b03bf19ed0e79b56955334af12bdf059b0712498e49

9. Проверьте, что данные остались на месте.

root@otus02t:~# psql -h localhost -U postgres -d postgres
Password for user postgres:
psql (16.10 (Ubuntu 16.10-0ubuntu0.24.04.1), server 14.19 (Debian 14.19-1.pgdg13+1))
Type "help" for help.

postgres=# \l+
                                                                                        List of databases
   Name    |  Owner   | Encoding | Locale Provider |  Collate   |   Ctype    | ICU Locale | ICU Rules |   Access privileges   |  Size   | Tablespace |                Description
-----------+----------+----------+-----------------+------------+------------+------------+-----------+-----------------------+---------+------------+--------------------------------------------
 otus      | postgres | UTF8     | libc            | en_US.utf8 | en_US.utf8 |            |           |                       | 8673 kB | pg_default |

otus=# select * from shipments
otus-# ;
 id | product_name | quantity | destination
----+--------------+----------+-------------
  1 | bananas      |     1000 | Europe
  2 | bananas      |     1500 | Asia
  3 | bananas      |     2000 | Africa
  4 | coffee       |      500 | USA
  5 | coffee       |      700 | Canada
  6 | coffee       |      300 | Japan
  7 | sugar        |     1000 | Europe
  8 | sugar        |      800 | Asia
  9 | sugar        |      600 | Africa
 10 | sugar        |      400 | USA
(10 rows)
